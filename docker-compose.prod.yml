version: "3.9"
services:
  # TODO:  Memory overcommit must be enabled! Without it
  redis:
    image: redis/redis-stack-server:latest
    container_name: jarvis-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis-stack
    env_file:
      - .env
    command:
      - "redis-stack-server"
      - "--save 90 1"
      - "--save 30 10"
      - "--save 6 10000"
      - "--requirepass ${REDIS_PASSWORD}"
  app:
    image: jarvisgptacr.azurecr.io/jarvis_app:v1
    container_name: jarvis-api
    build: .
    restart: always
    # TODO: --proxy-headers, nginx, domain attatch
    command: uvicorn main:app --workers 3 --host=0.0.0.0 --port 80
    expose:
      - "80"
      - "443"
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    depends_on:
      - redis
  nginx:
    image: nginx:latest
    container_name: jarvis-nginx
    restart: unless-stopped
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
  certbot:
    container_name: jarvis-certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  # https://velog.io/@fordevelop/Docker-Nginx-Certbot-Lets-Encrypt%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4-SSL-%EC%9D%B8%EC%A6%9D%EC%84%9C-%EB%B0%9C%EA%B8%89
  nginx:
    container_name: jarvis-nginx
    image: nginx:1.15-alpine
    restart: unless_stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  certbot:
    container_name: jarvis-certbot
    image: certbot/certbot:v0.36.0
    restart: always
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
volumes:
  redis-data:
    driver: local
